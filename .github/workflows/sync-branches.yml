name: Sync Branches

on:
    workflow_dispatch:
        inputs:
            target-branch:
                description: 'Target branch to sync to'
                required: true
                default: 'dev'
            pr-title:
                description: 'Custom PR title'
                required: false
                default: 'Merge main into dev'
            pr-body:
                description: 'Custom PR description'
                required: false
                default: 'Automated PR to synchronize changes between branches'
            pr-reviewers:
                description: 'Comma-separated list of GitHub usernames of the reviewers (optional)'
                required: false

permissions:
    pull-requests: write
    contents: write

jobs:
    validate-trigger:
        runs-on: ubuntu-latest
        steps:
            - name: Validate Source Branch
              run: |
                  if [[ "${{ github.ref_name }}" != "main" ]]; then
                    echo "This workflow can only be triggered with 'main' as the source branch."
                    exit 1
                  fi
            - name: Validate Inputs
              run: |
                  if [[ -z "${{ github.event.inputs.pr-title }}" ]]; then
                      echo "Error: Pull request title is required." && exit 1
                  fi
                  if [[ -z "${{ github.event.inputs.target-branch }}" ]]; then
                      echo "Error: Target branch is required." && exit 1
                  fi

    create-or-update-pr:
        needs: validate-trigger
        runs-on: ubuntu-latest
        outputs:
            pr_number: ${{ steps.set_pr_number.outputs.pr_number }}
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Check for Existing Pull Request
              id: check_pr
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  pr_url=$(gh pr list \
                  --base "${{ github.event.inputs.target-branch }}" \
                  --head "${{ github.event.inputs.source-branch }}" \
                  --state open \
                  --label "github-actions" \
                  --json url -q ".[0].url")
                  echo "PR URL: $pr_url"

                  if [[ -z "$pr_url" ]]; then
                    echo "No existing PR found. Will create a new one."
                    echo "pr_exists=false" >> $GITHUB_OUTPUT
                  else
                    echo "Existing PR found: $pr_url"
                    echo "pr_exists=true" >> $GITHUB_OUTPUT
                    echo "pr_url=$pr_url" >> $GITHUB_OUTPUT
                    pr_number=$(echo "$pr_url" | sed 's/.*\/\(.*\)/\1/')
                    echo "pr_number_check_step=$pr_number" >> $GITHUB_OUTPUT
                  fi

            - name: Ensure 'github-actions' Label Exists
              id: check_label
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  label_exists=$(gh label list --repo ${{ github.repository }} --json name -q ".[].name" | grep -w "github-actions" || true)
                  if [[ -n "$label_exists" ]]; then
                    echo "Label 'github-actions' already exists. Skipping PR creation/update."
                    exit 0
                  else
                    echo "Label 'github-actions' does not exist. Creating it now."
                    gh label create github-actions --color "D4C5F9" --description "Label for GitHub Actions"
                  fi

            - name: Create Pull Request
              id: create_pr
              if: steps.check_pr.outputs.pr_exists == 'false'
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  # Create PR
                  pr_url=$(gh pr create \
                    --title "${{ github.event.inputs.pr-title }}" \
                    --body "${{ github.event.inputs.pr-body }}" \
                    --base "${{ github.event.inputs.target-branch }}" \
                    --head "${{ github.ref_name }}" \
                    --repo ${{ github.repository }} \
                    --assignee "${{ github.actor }}" \
                    --label "github-actions")

                  pr_number=$(echo "$pr_url" | sed 's/.*\/\(.*\)/\1/')
                  echo "pr_number_create_step=$pr_number" >> $GITHUB_OUTPUT

                  # Assign reviewers if any
                  if [[ -n "${{ github.event.inputs.pr-reviewers }}" ]]; then
                    IFS=',' read -ra REVIEWERS <<< "${{ github.event.inputs.pr-reviewers }}"
                    for reviewer in "${REVIEWERS[@]}"; do
                      gh pr edit "$pr_url" --add-reviewer "$reviewer"
                    done
                  fi

            - name: Update Existing Pull Request
              if: steps.check_pr.outputs.pr_exists == 'true'
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  # Update the existing PR
                  gh pr edit ${{ steps.check_pr.outputs.pr_url }} \
                    --title "${{ github.event.inputs.pr-title }}" \
                    --body "${{ github.event.inputs.pr-body }}" \
                    --add-assignee "${{ github.actor }}" \
                    --add-label "github-actions"

                  # Assign reviewers if any
                  if [[ -n "${{ github.event.inputs.pr-reviewers }}" ]]; then
                    IFS=',' read -ra REVIEWERS <<< "${{ github.event.inputs.pr-reviewers }}"
                    for reviewer in "${REVIEWERS[@]}"; do
                      gh pr edit "${{ steps.check_pr.outputs.pr_url }}" --add-reviewer "$reviewer"
                    done
                  fi
            - name: Set PR Number
              id: set_pr_number
              run: |
                  if [[ -n "${{ steps.create_pr.outputs.pr_number_create_step }}" ]]; then
                    echo "pr_number=${{ steps.create_pr.outputs.pr_number_create_step }}" >> $GITHUB_OUTPUT
                  elif [[ -n "${{ steps.check_pr.outputs.pr_number_check_step }}" ]]; then
                    echo "pr_number=${{ steps.check_pr.outputs.pr_number_check_step }}" >> $GITHUB_OUTPUT
                  else
                    echo "No PR number found. Exiting."
                    exit 1
                  fi

    auto-labeler:
        needs: create-or-update-pr
        uses: ./.github/workflows/auto-labeler.yml
        with:
            pr-number: ${{ needs.create-or-update-pr.outputs.pr_number }}
