name: Sync Branches
on:
    workflow_dispatch:
        inputs:
            source-branch:
                description: 'Source branch to sync from'
                required: true
                default: 'main'
                type: string
            target-branch:
                description: 'Target branch to sync to'
                required: true
                default: 'dev'
                type: string
            pr-title:
                description: 'Custom PR title'
                required: false
                type: string
                default: 'chore: sync branches'
            pr-body:
                description: 'Custom PR description'
                required: false
                type: string
                default: 'Automated PR to synchronize changes between branches'

permissions:
    pull-requests: write
    contents: write

jobs:
    validate-trigger:
        runs-on: ubuntu-latest
        steps:
            - name: Check Trigger Event
              id: validate_event
              run: |
                  if [[ "${{ github.event.inputs.source-branch }}" != "main" ]]; then
                      echo "This workflow can only be triggered with source-branch as 'main'."
                      exit 1
                  fi
                  echo "Validation successful."
    create-sync-pr:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            # Debug Info
            - name: Debug Info
              run: |
                  echo "Current branch: $(git branch --show-current)"
                  echo "Remote branches:"
                  git branch -r
                  echo "Local branches:"
                  git branch -l
            # Fetch source branch
            - name: Fetch source branch
              run: |
                  git fetch origin ${{ inputs.source-branch }}
                  git checkout ${{ inputs.source-branch }}
                  git pull origin ${{ inputs.source-branch }}
            # Check if sync branch exists
            - name: Check if sync branch exists
              id: check_branch
              run: |
                  if git ls-remote --heads origin "sync/${{ inputs.source-branch }}-to-${{ inputs.target-branch }}" | grep -q "refs/heads"; then
                      echo "exists=true" >> $GITHUB_ENV
                  else
                      echo "exists=false" >> $GITHUB_ENV
                  fi
            # Checkout or create sync branch
            - name: Checkout or Create Sync Branch
              run: |
                  if [[ "$exists" == "true" ]]; then
                      git checkout sync/${{ inputs.source-branch }}-to-${{ inputs.target-branch }}
                      git pull origin sync/${{ inputs.source-branch }}-to-${{ inputs.target-branch }}
                  else
                      git checkout -b sync/${{ inputs.source-branch }}-to-${{ inputs.target-branch }}
                  fi
            # Merge source branch into sync branch
            - name: Merge Source into Sync Branch
              run: |
                  git merge --no-ff origin/${{ inputs.source-branch }} || echo "Merge conflicts detected!"
            # Push changes to remote
            - name: Push Changes to Sync Branch
              run: |
                  git push origin sync/${{ inputs.source-branch }}-to-${{ inputs.target-branch }}
            # Create or update Pull Request
            - name: Create or Update Pull Request
              uses: peter-evans/create-pull-request@v5
              with:
                  base: ${{ inputs.target-branch }}
                  branch: sync/${{ inputs.source-branch }}-to-${{ inputs.target-branch }}
                  title: ${{ inputs.pr-title }}
                  body: ${{ inputs.pr-body }}
                  commit-message: 'Sync changes from ${{ inputs.source-branch }} to ${{ inputs.target-branch }}'
                  delete-branch: false
